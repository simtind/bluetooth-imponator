#include "animation.hpp"


const static uint16_t christmas_tree[] = {
    0x0000, 0x0000, 0xfec0, 0xfec0, 0x0000, 0x0000, 0x0000, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 0x0000, 0x0000, 0x0000, 0xfec0, 0xfec0, 
    0x0000, 0x0000, 0x0000, 0xfec0, 0x03e1, 0xb01f, 0xfec0, 0x0000, 0x0000, 0x0000, 0x03e1, 0x03e1, 0x0000, 0x0000, 0x0000, 0x03e1, 
    0x03e1, 0x03e1, 0x03e1, 0x0000, 0x035f, 0x0000, 0x03e1, 0x03e1, 0x0000, 0xf800, 0x0000, 0x03e1, 0xa81f, 0x03e1, 0x03e1, 0x0000, 
    0x03e1, 0x03e1, 0x03e1, 0x03e1, 0x03e1, 0x03e1, 0x0000, 0x03e1, 0x03e1, 0x035f, 0x03e1, 0x0000, 0x03e1, 0x03e1, 0x03e1, 0x03e1, 
    0x03e1, 0x03e1, 0xf801, 0x0000, 0x7980, 0x7980, 0x0000, 0xb01f
}

const static uint16_t revolve_logo[] = 
{
  0x0000, 0x0000, 0x0000, 0x0000, 0xfd40, 0xfec0, 0x0000, 0x0000, 0xfdc0, 0xfcc1, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 0xfdc0, 0xfcc1, 
  0xfec0, 0xfec0, 0xfec0, 0xfec0, 0xfdc0, 0xfcc1, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 0xfdc0, 0xfcc1, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 
  0xfdc0, 0xfcc1, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 0x0000, 0xfec0, 0x0000, 0xfec0, 0xfd00, 0xfd00, 0x0000, 0x0000, 0xfd00, 
  0xfd40, 0xfdc0, 0xfdc0, 0x0000, 0xfd00, 0xfdc0, 0xfdc0, 0xfec0, 0xfec0, 0x0000, 0xfdc0, 0xfec0, 0xfec0, 0xfec0, 0xfec0, 0x0000, 
  0xfec0, 0xfec0, 0x0000, 0xfec0, 0xfec0, 0x0000, 0xfec0, 0x0000
};

const static uint16_t * animations[] = {
  christmas_tree, 
  revolve_logo
};

const static size_t num_animations = sizeof(animations) / sizeof(animations[0]);


void Animation::begin(DisplayService & display)
{
    offset = 0;
    animation_index = 0;
}

uint32_t Animation::run(DisplayService & display, const JoyconnData & input)
{
    const auto next_frame = millis() + 100;
    // Christmas tree
    if (animation == nullptr)
    {
        return;
    }

    if (input.buttons.joystick)
    {
        animation_index = (animation_index + 1) % num_animations;
    }
    if (input.buttons.top)
    {
        animation_index = animation_index == 0 ? num_animations - 1 : animation_index - 1;
    }

    offset = (offset + 1) % display.height();

    Display.fillScreen(0);
    display.drawRGBBitmap(0, offset, animations[animation_index], display.width(), display.height());
    display.show();

    return next_frame;
}